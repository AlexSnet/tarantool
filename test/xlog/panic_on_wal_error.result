-- preparatory stuff
fio = require('fio')
---
...
glob = fio.pathjoin(box.cfg.wal_dir, '*.xlog')
---
...
for _, file in pairs(fio.glob(glob)) do fio.unlink(file) end
---
...
glob = fio.pathjoin(box.cfg.wal_dir, '*.snap')
---
...
for _, file in pairs(fio.glob(glob)) do fio.unlink(file) end
---
...
--# stop server default
--# start server default
box.schema.user.grant('guest', 'replication')
---
...
_ = box.schema.space.create('test')
---
...
_ = box.space.test:create_index('pk')
---
...
--
-- reopen xlog
--
--# stop server default
--# start server default
box.space.test ~= nil
---
- true
...
-- insert some stuff
-- 
box.space.test:auto_increment{'before snapshot'}
---
- [1, 'before snapshot']
...
--
-- this snapshot will go to the replica
--
box.snapshot()
---
- ok
...
-- 
-- create a replica, let it catch up somewhat
--
--# create server replica with rpl_master=default, script='xlog/replica.lua'
--# start server replica
--# set connection replica
box.space.test:select{}
---
- - [1, 'before snapshot']
...
-- 
-- stop replica, restart the master, insert more stuff
-- which will make it into an xlog only
--
--# stop server replica
-- 
--# set connection default
box.space.test:auto_increment{'after snapshot'}
---
- [2, 'after snapshot']
...
box.space.test:auto_increment{'after snapshot - one more row'}
---
- [3, 'after snapshot - one more row']
...
--
-- save snapshot and remove xlogs
-- 
box.snapshot()
---
- ok
...
fio = require('fio')
---
...
glob = fio.pathjoin(box.cfg.wal_dir, '*.xlog')
---
...
files = fio.glob(glob)
---
...
for _, file in pairs(files) do fio.unlink(file) end
---
...
--# stop server default
--# start server default
--
-- make sure the server has some xlogs, otherwise the
-- replica doesn't discover the gap in the logs
--
box.space.test:auto_increment{'after snapshot and restart'}
---
- [4, 'after snapshot and restart']
...
box.space.test:auto_increment{'after snapshot and restart - one more row'}
---
- [5, 'after snapshot and restart - one more row']
...
--  
--  check that panic is true
--
box.cfg{panic_on_wal_error=true}
---
...
box.cfg.panic_on_wal_error
---
- true
...
-- 
-- try to start the replica, ha-ha
-- (replication should fail, some rows are missing)
--
--# start server replica
--# set connection replica
fiber = require('fiber')
---
...
while box.info.replication.status ~= "stopped" do fiber.sleep(0.001) end
---
...
box.info.replication.status
---
- stopped
...
box.info.replication.message
---
- 'Missing .xlog file between LSN 6 {1: 6, 2: 0} and 8 {1: 8, 2: 0}'
...
box.space.test:select{}
---
- - [1, 'before snapshot']
...
--
--
--# set connection default 
--# stop server replica
--# cleanup server replica
--
-- cleanup
box.space.test:drop()
---
...
box.schema.user.revoke('guest', 'replication')
---
...
